root /packages:AgileXS/packages:Domain/packages

import Metaphor.PIM.Archetypes.CrmArchetype
import Metaphor.PIM.Domain.Attribute
import Metaphor.PIM.Domain.Class
import Metaphor.PIM.Domain.Enumeration
import Metaphor.PIM.Domain.Literal
import Metaphor.PIM.Domain.Operation
import Metaphor.PIM.Domain.Package
import Metaphor.PIM.Domain.Parameter

path primitive = /packages:Metaphor/packages:PIM/packages:Domain/types
path catalog = /packages:AgileXS/packages:Domain/packages:Catalog/types
path shop = /packages:AgileXS/packages:Domain/packages:Shop/types
path party = /packages:AgileXS/packages:Domain/packages:Party/types

Package {
    name = Shop
    types = {
        Class {
            name = Shop            
            attributes = {
                Attribute {
                    name = name
                    type = primitive:String
                }
                Attribute {
                    name = urlPrefix
                    type = primitive:String
                    lower = 0
                }
                Attribute {
                    name = catalog
                    type = catalog:Catalog
                    opposite = catalog:Catalog/attributes:shops
                }
                /**
                 * IETF language tag. See http://en.wikipedia.org/wiki/IETF_language_tag.
                 * When not specified (null), denotes a default value applicable for all languages.
                 */
                Attribute {
                    name = defaultLanguage
                    type = primitive:String
                    lower = 0
                } 
                Attribute {
                    name = topLevelProductGroups
                    type = catalog:ProductGroup
                    lower = 0
                    upper = {}
                }
                Attribute {
                    name = excludedProperties
                    type = catalog:Property
                    lower = 0
                    upper = {}
                }
                Attribute {
                    name = excludedItems
                    type = catalog:Item
                    lower = 0
                    upper = {}
                }
                Attribute {
                    name = promotions
                    type = shop:Promotion
                    lower = 0
                    upper = {}
                    isComposite = true
                    opposite = shop:Promotion/attributes:shop
                }
                Attribute {
                    name = templates
                    type = catalog:Template
                    lower = 0
                    upper = {}
                    isComposite = true
                }
            }
        }
        @comment "Promotion is a sales action for a certain period, price and minimum volume"
        Class {
            name = Promotion
            attributes = {
                Attribute {
                    name = startDate
                    type = primitive:Date
                }
                Attribute {
                    name = endDate
                    type = primitive:Date
                }
                Attribute {
                    name = shop
                    type = shop:Shop
                    opposite = shop:Shop/attributes:promotions
                }
                Attribute {
                    name = templates
                    type = catalog:Template
                    lower = 0
                    upper = {}
                }
            }
        }
        Class {
            name = VolumeDiscountPromotion
            superClass = shop:Promotion
            attributes = {
                Attribute {
                    name = product
                    type = catalog:Product
                }
                Attribute {
                    name = price
                    type = primitive:Money
                }
                Attribute {
                    name = priceCurrency
                    type = primitive:String
                }
                Attribute {
                    name = volumeDiscount
                    type = primitive:Integer
                }
            }
        }
        Class {
            name = Order
            attributes = {
                Attribute {
                    name = orderDate
                    type = primitive:Date
                }
                Attribute {
                    name = productOrders
                    type = shop:ProductOrder
                    lower = 1
                    upper = {}
                    isComposite = true
                }
                Attribute {
                    name = transport
                    type = shop:Transport
                    isComposite = true
                }
                Attribute {
                    name = user
                    type = party:User
                }
                Attribute {
                    name = status
                    type = shop:OrderStatus
                }
                Attribute {
                    name = amountPaid
                    type = primitive:Money
                }
                Attribute {
                    name = history
                    type = shop:OrderHistory
                    lower = 0
                    upper = {}
                    isComposite = true
                }
            }
            
        }
        Class {
            name = ProductOrder
            attributes = {
                Attribute {
                    name = product
                    type = catalog:Product
                }
                Attribute {
                    name = promotion
                    type = shop:Promotion
                    lower = 0
                }
                Attribute {
                    name = volume
                    type = primitive:Integer
                }
                Attribute {
                    name = price
                    type = primitive:Money 
                }
                Attribute {
                    name = priceCurrency
                    type = primitive:String
                }
            }
        }
        Class {
            name = Transport
            attributes = {
                Attribute {
                    name = desciption
                    type = primitive:String
                }
                Attribute {
                    name = transportCompany
                    type = primitive:String
                }
                @comment "Delivery time in days"
                Attribute {
                    name = deliveryTime
                    type = primitive:Integer
                }
            }
        }
        Class {
            name = OrderHistory
            attributes = {
                Attribute {
                    name = user
                    type = party:User
                }
                Attribute {
                    name = newStatus
                    type = shop:OrderStatus
                }
                Attribute {
                    name = comment
                    type = primitive:String
                }
                Attribute {
                    name = date
                    type = primitive:Date 
                }
            }
        }
        Enumeration {
            name = OrderStatus
            literals = {
                Literal {
                    name = InShoppingCart
                }
                Literal {
                    name = PendingPayment 
                }
                Literal {
                    name = Processing 
                }
                Literal {
                    name = Shipped 
                }
                Literal {
                    name = Shipped 
                }
                Literal {
                    name = OnHold 
                }
                Literal {
                    name = Complete 
                }
                Literal {
                    name = Closed 
                }
                Literal {
                    name = Canceled 
                }
            }
        }
    }
}
 