root /packages:EasyEnterprise/packages

import Metaphor.PIM.Archetypes.CrmArchetype
import Metaphor.PIM.Domain.Attribute
import Metaphor.PIM.Domain.Class
import Metaphor.PIM.Domain.Operation
import Metaphor.PIM.Domain.Package

path primitive=/packages:Metaphor/packages:PIM/packages:Domain/types
path bookkeeping=/packages:EasyEnterprise/packages:Domain/types


Package {
    name = Domain
    types = {
        Class {
            name = Bookkeeping
            attributes = {
                Attribute {
                    name = organistation
                    type = primitive:Long
                }
                Attribute {
                    name = name
                    type = primitive:String
                }
                Attribute {
                    name = mutations
                    type = bookkeeping:Mutation
                    lower = 0
                    upper = {}
                    isComposite = true
                }
            }
        }
        
        Class {
            name = SourceDocument
        }
        
        Class {
            name = Receipt
            superClass = bookkeeping:SourceDocument
        }
        
        Class {
            name = CheckBookStub
            superClass = bookkeeping:SourceDocument
        }
        
        Class {
            name = Invoice
            superClass = bookkeeping:SourceDocument
        }
        
        Class {
            name = DeliveryNote
            superClass = bookkeeping:SourceDocument
        }
        Class {
            name = PurchaseOrder
            superClass = bookkeeping:SourceDocument
        }
        Class {
            name = PurchaseRequisition
            superClass = bookkeeping:SourceDocument
        }
        Class {
            name = CreditNote
            superClass = bookkeeping:SourceDocument
        }
        
        Class {
            name = JournalEntry
            isAbstract = true
            attributes = {
                Attribute {
                    name = createdBy
                    type = primitive:Long
                    lower = 1
                }
                Attribute {
                    name = account
                    type = bookkeeping:Account
                }
                Attribute {
                    name = currency
                    type = primitive:String
                }
                Attribute {
                    name = amount
                    type = primitive:Money
                }
                Attribute {
                    name = journalDate
                    type = primitive:Timestamp
                }
            }
        }
        
        


        Class {
            name = BankTransaction
            superClass = bookkeeping:JournalEntry
            attributes = {
                @comment "Reference Id generated by Bank, not always present"
                Attribute {
                    name = bankRefId
                    type = primitive:String
                }
                Attribute {
                    name = contactName
                    type = primitive:String
                }
                Attribute {
                    name = contactAccount
                    type = primitive:String
                }
                Attribute {
                    name = transactionDate
                    type = primitive:Timestamp
                }
                Attribute {
                    name = interestDate
                    type = primitive:Timestamp
                }
                Attribute {
                    name = description
                    type = primitive:String
                }
                Attribute {
                    name = bankAccount
                    type = bookkeeping:BankAccount
                }
            }
        }
        Class {
            name = BankAccount
            superClass = bookkeeping:Asset
            attributes = {
                Attribute {
                    name = accountNr
                    type = primitive:String
                }
                Attribute {
                    name = bank
                    type = primitive:String
                }
            }
        }
        
        Class {
            name = Ledger
            attributes = {
                Attribute {
                    name = subLedgers
                    type = bookkeeping:Ledger
                    lower = 0
                    upper = {}
                    isComposite = true
                }
                Attribute {
                    name = accounts
                    type = bookkeeping:Account
                    lower = 0
                    upper = {}
                    isComposite = true
                }
            }
        }
        Class {
            name = GeneralLedger
            superClass = bookkeeping:Ledger
            
        }
        Class {
            name = Account
            attributes = {
                Attribute {
                    name = accountNr
                    type = primitive:String
                }
            }
        }
        @comment "Activa"
        Class {
            name = Asset
            superClass = bookkeeping:Account
        }
        @comment "Passiva"
        Class {
            name = Liability
            superClass = bookkeeping:Account
        }
        @comment "Eigen vermogen"
        Class {
            name = Equity
            superClass = bookkeeping:Account
        }
        @comment "Omzet"
        Class {
            name = Revenue
            superClass = bookkeeping:Account
        }
        @comment "Kosten"
        Class {
            name = Expense
            superClass = bookkeeping:Account
        }
        Class {
            name = Booking
            attributes = {
                Attribute {
                    name = bookingDate
                    type = primitive:Date
                }
                Attribute {
                    name = sourceDocument
                    type = bookkeeping:SourceDocument
                    lower = 0
                }
                Attribute {
                    name = entries
                    type = bookkeeping:JournalEntry
                    lower = 1
                    upper = {}
                }
                Attribute {
                    name = owner
                    type = bookkeeping:Dimension
                    lower = 1
                    upper = {}
                }
            }            
        }
        Class {
            name = Mutation
            attributes = {
                Attribute {
                    name = bookings
                    type = bookkeeping:Booking
                    lower = 0
                    upper = {}
                    isComposite = true
                }
                
                Attribute {
                    name = createdBy
                    type = primitive:Long
                    lower = 1
                }
                Attribute {
                    name = mutationDate
                    type = primitive:Date
                }
                Attribute {
                    name = description
                    type = primitive:String
                }
            }
        }
        
        Class {
            name = Dimension
            attributes = {
                Attribute {
                    name = ownerType
                    type = primitive:String
                }
                Attribute {
                    name = ownerId
                    type = primitive:Long
                }
            }
        }
        
    }
    operations = {
        Operation {
            name = getLedger
            type = bookkeeping:GeneralLedger
        }
        Operation {
            name = addJournalEntry
            type = bookkeeping:JournalEntry
        }
    }
}